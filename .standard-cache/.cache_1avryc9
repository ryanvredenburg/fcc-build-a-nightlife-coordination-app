{"/app/app/config/auth.js":{"size":202,"mtime":1503761066514,"hashOfConfig":"u71bin","results":{"filePath":"/app/app/config/auth.js","messages":[],"errorCount":0,"warningCount":0,"output":"'use strict'\n\nmodule.exports = {\n  'githubAuth': {\n    'clientID': process.env.GITHUB_KEY,\n    'clientSecret': process.env.GITHUB_SECRET,\n    'callbackURL': process.env.APP_URL + 'auth/github/callback'\n  }\n}\n"}},"/app/app/models/users.js":{"size":334,"mtime":1503761509951,"hashOfConfig":"u71bin","results":{"filePath":"/app/app/models/users.js","messages":[],"errorCount":0,"warningCount":0,"output":"'use strict'\n\nvar mongoose = require('mongoose')\nvar Schema = mongoose.Schema\n\nvar User = new Schema({\n  github: {\n    id: String,\n    displayName: String,\n    username: String,\n    publicRepos: Number\n  },\n  nbrClicks: {\n    clicks: Number\n  }\n}, { collection: 'fccNightlifeUser' })\n\nmodule.exports = mongoose.model('User', User)\n"}},"/app/server.js":{"size":900,"mtime":1503761066590,"hashOfConfig":"u71bin","results":{"filePath":"/app/server.js","messages":[],"errorCount":0,"warningCount":0,"output":"'use strict'\n\nvar express = require('express')\nvar routes = require('./app/routes/index.js')\nvar mongoose = require('mongoose')\nvar passport = require('passport')\nvar session = require('express-session')\n\nvar app = express()\nrequire('dotenv').load()\nrequire('./app/config/passport')(passport)\n\nmongoose.connect(process.env.MONGO_URI)\nmongoose.Promise = global.Promise\n\napp.use('/controllers', express.static(process.cwd() + '/app/controllers'))\napp.use('/public', express.static(process.cwd() + '/public'))\napp.use('/common', express.static(process.cwd() + '/app/common'))\n\napp.use(session({\n  secret: 'secretClementine',\n  resave: false,\n  saveUninitialized: true\n}))\n\napp.use(passport.initialize())\napp.use(passport.session())\n\nroutes(app, passport)\n\nvar port = process.env.PORT || 8080\napp.listen(port, function () {\n  console.log('Node.js listening on port ' + port + '...')\n})\n"}}}